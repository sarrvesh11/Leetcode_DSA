class Solution {
    public int orangesRotting(int[][] grid) {
        Queue<int[]>q=new LinkedList<>();
        int[][] dir=new int[][]{{1,0},{-1,0},{0,1},{0,-1}};
        int min=-1;
        int freshcount=0;
        for(int i=0;i<grid.length;i++){
            for(int j=0;j<grid[0].length;j++){
                if(grid[i][j]==2)
                    q.offer(new int[]{i,j});
                else if(grid[i][j]==1)
                    freshcount++;
            }
        }
        if(freshcount==0)
            return 0;
        if(q.size()==0)
            return -1;
        while(!q.isEmpty()){
            min++;
            int n=q.size();
            for(int i=0;i<n;i++){
                int[] curr=q.poll();
                for(int[] d:dir){
                   int x=curr[0]+d[0];
                   int y=curr[1]+d[1];

                    if(x<0 || y<0 || x>=grid.length || y>=grid[0].length)
                        continue;
                    if(grid[x][y]==1){
                        q.offer(new int[]{x,y});
                        grid[x][y]=2;
                        freshcount--;
                    }
                }
            }
        }
        return freshcount==0?min:-1;
    }
}
